// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.com.norrmann.clinic.web;

import ar.com.norrmann.clinic.model.Consultorio;
import ar.com.norrmann.clinic.model.Dia;
import ar.com.norrmann.clinic.model.HorarioDisponible;
import ar.com.norrmann.clinic.model.Paciente;
import ar.com.norrmann.clinic.model.Profesional;
import ar.com.norrmann.clinic.model.Turno;
import ar.com.norrmann.clinic.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Consultorio, String> ApplicationConversionServiceFactoryBean.getConsultorioToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ar.com.norrmann.clinic.model.Consultorio, java.lang.String>() {
            public String convert(Consultorio consultorio) {
                return new StringBuilder().append(consultorio.getNombre()).append(' ').append(consultorio.getDomicilio()).append(' ').append(consultorio.getTelefonos()).toString();
            }
        };
    }
    
    public Converter<Long, Consultorio> ApplicationConversionServiceFactoryBean.getIdToConsultorioConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ar.com.norrmann.clinic.model.Consultorio>() {
            public ar.com.norrmann.clinic.model.Consultorio convert(java.lang.Long id) {
                return Consultorio.findConsultorio(id);
            }
        };
    }
    
    public Converter<String, Consultorio> ApplicationConversionServiceFactoryBean.getStringToConsultorioConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ar.com.norrmann.clinic.model.Consultorio>() {
            public ar.com.norrmann.clinic.model.Consultorio convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Consultorio.class);
            }
        };
    }
    
    public Converter<Dia, String> ApplicationConversionServiceFactoryBean.getDiaToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ar.com.norrmann.clinic.model.Dia, java.lang.String>() {
            public String convert(Dia dia) {
                return new StringBuilder().append(dia.getNombre()).toString();
            }
        };
    }
    
    public Converter<Long, Dia> ApplicationConversionServiceFactoryBean.getIdToDiaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ar.com.norrmann.clinic.model.Dia>() {
            public ar.com.norrmann.clinic.model.Dia convert(java.lang.Long id) {
                return Dia.findDia(id);
            }
        };
    }
    
    public Converter<String, Dia> ApplicationConversionServiceFactoryBean.getStringToDiaConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ar.com.norrmann.clinic.model.Dia>() {
            public ar.com.norrmann.clinic.model.Dia convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Dia.class);
            }
        };
    }
    
    public Converter<HorarioDisponible, String> ApplicationConversionServiceFactoryBean.getHorarioDisponibleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ar.com.norrmann.clinic.model.HorarioDisponible, java.lang.String>() {
            public String convert(HorarioDisponible horarioDisponible) {
                return new StringBuilder().append(horarioDisponible.getHora()).toString();
            }
        };
    }
    
    public Converter<Long, HorarioDisponible> ApplicationConversionServiceFactoryBean.getIdToHorarioDisponibleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ar.com.norrmann.clinic.model.HorarioDisponible>() {
            public ar.com.norrmann.clinic.model.HorarioDisponible convert(java.lang.Long id) {
                return HorarioDisponible.findHorarioDisponible(id);
            }
        };
    }
    
    public Converter<String, HorarioDisponible> ApplicationConversionServiceFactoryBean.getStringToHorarioDisponibleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ar.com.norrmann.clinic.model.HorarioDisponible>() {
            public ar.com.norrmann.clinic.model.HorarioDisponible convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), HorarioDisponible.class);
            }
        };
    }
    
    public Converter<Paciente, String> ApplicationConversionServiceFactoryBean.getPacienteToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ar.com.norrmann.clinic.model.Paciente, java.lang.String>() {
            public String convert(Paciente paciente) {
                return new StringBuilder().append(paciente.getApellido()).append(' ').append(paciente.getNombres()).append(' ').append(paciente.getDocumento()).append(' ').append(paciente.getTelefonos()).toString();
            }
        };
    }
    
    public Converter<Long, Paciente> ApplicationConversionServiceFactoryBean.getIdToPacienteConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ar.com.norrmann.clinic.model.Paciente>() {
            public ar.com.norrmann.clinic.model.Paciente convert(java.lang.Long id) {
                return Paciente.findPaciente(id);
            }
        };
    }
    
    public Converter<String, Paciente> ApplicationConversionServiceFactoryBean.getStringToPacienteConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ar.com.norrmann.clinic.model.Paciente>() {
            public ar.com.norrmann.clinic.model.Paciente convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Paciente.class);
            }
        };
    }
    
    public Converter<Profesional, String> ApplicationConversionServiceFactoryBean.getProfesionalToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ar.com.norrmann.clinic.model.Profesional, java.lang.String>() {
            public String convert(Profesional profesional) {
                return new StringBuilder().append(profesional.getApellido()).append(' ').append(profesional.getNombres()).append(' ').append(profesional.getTratamiento()).toString();
            }
        };
    }
    
    public Converter<Long, Profesional> ApplicationConversionServiceFactoryBean.getIdToProfesionalConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ar.com.norrmann.clinic.model.Profesional>() {
            public ar.com.norrmann.clinic.model.Profesional convert(java.lang.Long id) {
                return Profesional.findProfesional(id);
            }
        };
    }
    
    public Converter<String, Profesional> ApplicationConversionServiceFactoryBean.getStringToProfesionalConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ar.com.norrmann.clinic.model.Profesional>() {
            public ar.com.norrmann.clinic.model.Profesional convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Profesional.class);
            }
        };
    }
    
    public Converter<Turno, String> ApplicationConversionServiceFactoryBean.getTurnoToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ar.com.norrmann.clinic.model.Turno, java.lang.String>() {
            public String convert(Turno turno) {
                return new StringBuilder().append(turno.getFecha()).append(' ').append(turno.getHora()).toString();
            }
        };
    }
    
    public Converter<Long, Turno> ApplicationConversionServiceFactoryBean.getIdToTurnoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ar.com.norrmann.clinic.model.Turno>() {
            public ar.com.norrmann.clinic.model.Turno convert(java.lang.Long id) {
                return Turno.findTurno(id);
            }
        };
    }
    
    public Converter<String, Turno> ApplicationConversionServiceFactoryBean.getStringToTurnoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ar.com.norrmann.clinic.model.Turno>() {
            public ar.com.norrmann.clinic.model.Turno convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Turno.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getConsultorioToStringConverter());
        registry.addConverter(getIdToConsultorioConverter());
        registry.addConverter(getStringToConsultorioConverter());
        registry.addConverter(getDiaToStringConverter());
        registry.addConverter(getIdToDiaConverter());
        registry.addConverter(getStringToDiaConverter());
        registry.addConverter(getHorarioDisponibleToStringConverter());
        registry.addConverter(getIdToHorarioDisponibleConverter());
        registry.addConverter(getStringToHorarioDisponibleConverter());
        registry.addConverter(getPacienteToStringConverter());
        registry.addConverter(getIdToPacienteConverter());
        registry.addConverter(getStringToPacienteConverter());
        registry.addConverter(getProfesionalToStringConverter());
        registry.addConverter(getIdToProfesionalConverter());
        registry.addConverter(getStringToProfesionalConverter());
        registry.addConverter(getTurnoToStringConverter());
        registry.addConverter(getIdToTurnoConverter());
        registry.addConverter(getStringToTurnoConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
